[{"H:\\Code Files\\shopping-cart\\shopping-cart\\src\\index.js":"1","H:\\Code Files\\shopping-cart\\shopping-cart\\src\\reportWebVitals.js":"2","H:\\Code Files\\shopping-cart\\shopping-cart\\src\\App.js":"3","H:\\Code Files\\shopping-cart\\shopping-cart\\src\\views\\ShoppingCart.jsx":"4","H:\\Code Files\\shopping-cart\\shopping-cart\\src\\views\\Cart.jsx":"5"},{"size":500,"mtime":499162500000,"results":"6","hashOfConfig":"7"},{"size":362,"mtime":499162500000,"results":"8","hashOfConfig":"7"},{"size":503,"mtime":1611695856541,"results":"9","hashOfConfig":"7"},{"size":7292,"mtime":1611698378843,"results":"10","hashOfConfig":"7"},{"size":4453,"mtime":1611878799348,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"yrazcn",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"14"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"14"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"H:\\Code Files\\shopping-cart\\shopping-cart\\src\\index.js",[],["25","26"],"H:\\Code Files\\shopping-cart\\shopping-cart\\src\\reportWebVitals.js",[],"H:\\Code Files\\shopping-cart\\shopping-cart\\src\\App.js",["27"],"import './App.css';\nimport ShoppingCart from './views/ShoppingCart';\nimport Cart from './views/Cart';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from 'react-router-dom';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Switch>\n          <Route exact path='/cart'>\n            <Cart />\n          </Route>\n          <Route path='/'>\n            <ShoppingCart />\n          </Route>\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","H:\\Code Files\\shopping-cart\\shopping-cart\\src\\views\\ShoppingCart.jsx",["28"],"import React, { useState, useEffect } from 'react';\r\nimport '../sass/index.scss';\r\n\r\nconst ShoppingCart = () => {\r\n    let initialState = [\r\n        {\r\n            id: 0,\r\n            model: 'Nike Kobe 6 Proto Grinch', \r\n            img: 'https://stockx-360.imgix.net/Nike-Kobe-6-Protro-Grinch/Images/Nike-Kobe-6-Protro-Grinch/Lv2/img01.jpg?auto=format,compress&q=90&updated_at=1609445833&w=1000',\r\n            price: 215,\r\n            quantity: 1\r\n        },\r\n        {\r\n            id: 1,\r\n            model: 'Nike Lebron 18 Kylian Mbappe',\r\n            img: 'https://stockx-360.imgix.net/Nike-Lebron-18-Kylian-Mbappe/Images/Nike-Lebron-18-Kylian-Mbappe/Lv2/img01.jpg?auto=format,compress&q=90&updated_at=1611164319&w=1000',\r\n            price: 173,\r\n            quantity: 1\r\n        },\r\n        {\r\n            id: 2,\r\n            model: 'Nike KD 13 Aunt Pearl',\r\n            img: 'https://images.stockx.com/images/Nike-KD-13-Aunt-Pearl-Product.jpg?fit=fill&bg=FFFFFF&w=700&h=500&auto=format,compress&q=90&trim=color&updated_at=1607016174&w=1000',\r\n            price: 165,\r\n            quantity: 1\r\n        },\r\n        {\r\n            id: 3,\r\n            model: 'UA Curry 8 Tie Dye Black',\r\n            img: 'https://images.stockx.com/images/Under-Armour-Curry-8-Tie-Dye-Black.png?fit=fill&bg=FFFFFF&w=700&h=500&auto=format,compress&q=90&trim=color&updated_at=1607177072&w=1000',\r\n            price: 157,\r\n            quantity: 1\r\n        }\r\n    ]\r\n    const [cartVal, setCartVal] = useState(0);\r\n    const [cart, setCart] = useState([]);\r\n    const [items, setItems] = useState(initialState);\r\n\r\n    function addQuantity(e) {\r\n        let index = parseInt(e.target.id);\r\n        let modifiedItem = items.find(item => item.id === index);\r\n        let newItem;\r\n        if(modifiedItem) {\r\n            newItem = Object.assign({}, modifiedItem);\r\n            newItem.quantity += 1;\r\n        }\r\n        // merge with state\r\n        setItems((prevState) => {\r\n         if(index === 0) {\r\n             return [newItem, ...prevState.slice(1)];\r\n         } else if(index === prevState.length - 1) {\r\n             return [...prevState.slice(0, index), newItem];\r\n         } else {\r\n             return [...prevState.slice(0, index), newItem, ...prevState.slice(index + 1)]\r\n         }\r\n        })\r\n    }\r\n\r\n    function subtractQuantity(e) {\r\n        let index = parseInt(e.target.id);\r\n        const modifiedItem = items.find(item => item.id === index);\r\n        let newItem;\r\n        // make sure we find modifiedItem\r\n        if(modifiedItem) {\r\n            newItem = Object.assign({}, modifiedItem);\r\n            if(newItem.quantity > 1) {\r\n                newItem.quantity -= 1;\r\n            }\r\n        }\r\n        \r\n        // merge with state\r\n        setItems((prevState) => {\r\n         if(index === 0) {\r\n             return [newItem, ...prevState.slice(1)];\r\n         } else if(index === prevState.length - 1) {\r\n             return [...prevState.slice(0, index - 1), newItem];\r\n         } else {\r\n             return [...prevState.slice(0, index), newItem, ...prevState.slice(index + 1)]\r\n         }\r\n        })\r\n    }\r\n\r\n    // add item to cart\r\n    function addToCart(e) {\r\n        let index = parseInt(e.target.id);\r\n        const addedItem = items.find((item) => item.id === index);\r\n        const foundInCart = cart.find((item) => item.id === index);\r\n        // if item is already in cart, increment it in the cart instead of adding another asset\r\n        if(foundInCart) {\r\n            foundInCart.quantity += 1;\r\n            localStorage.setItem('cart', JSON.stringify(cart));\r\n            console.log(cart);\r\n        } else {\r\n            setCartVal((prev) => prev + 1);\r\n            setCart((prevState) => [...prevState, addedItem]);\r\n        }\r\n    }\r\n\r\n    // componentDidMount runs once and sets desired information where it needs to be\r\n    useEffect(() => {\r\n        if(localStorage.getItem('cart')) {\r\n            var storageCart = localStorage.getItem('cart');\r\n            storageCart = JSON.parse(storageCart);\r\n            setCart(storageCart);\r\n            setCartVal(storageCart.length);\r\n        }\r\n    }, [])\r\n\r\n    // whenever cart updates, update localStorage\r\n    useEffect(() => {\r\n        localStorage.setItem('cart', JSON.stringify(cart));\r\n    }, [cart])\r\n\r\n    return (\r\n        <div class='cart-container'>\r\n            <nav>\r\n                <a href='/cart'><svg xmlns=\"http://www.w3.org/2000/svg\" class=\"icon icon-tabler icon-tabler-shopping-cart\" width=\"44\" height=\"44\" viewBox=\"0 0 24 24\" stroke-width=\"1.5\" stroke=\"#2c3e50\" fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\r\n                <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\"/>\r\n                <circle cx=\"9\" cy=\"19\" r=\"2\" />\r\n                <circle cx=\"17\" cy=\"19\" r=\"2\" />\r\n                <path d=\"M3 3h2l2 12a3 3 0 0 0 3 2h7a3 3 0 0 0 3 -2l1 -7h-15.2\" />\r\n                </svg>\r\n                </a>\r\n                <p>{cartVal}</p>\r\n            </nav>\r\n            <div className='item-container'>\r\n                {items.map((shoe, index) => {\r\n                    return (\r\n                        <div className='shoe-container' key={index}>\r\n                            <img className='shoe-container__img' src={shoe.img} />\r\n                            <div className='shoe-container__description'>\r\n                                <h2 className='shoe-container__model'>{shoe.model}</h2>\r\n                                <p className='shoe-container__price'>${shoe.price}</p>\r\n                                <div className='shoe-container__quantity'>\r\n                                    <span>\r\n                                        <svg id={index} onClick={subtractQuantity} xmlns=\"http://www.w3.org/2000/svg\" class=\"icon icon-tabler icon-tabler-minus\" width=\"25\" height=\"44\" viewBox=\"0 0 24 24\" stroke-width=\"1.5\" stroke=\"#fff\" fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\r\n                                        <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\"/>\r\n                                        <line x1=\"5\" y1=\"12\" x2=\"19\" y2=\"12\" />\r\n                                        </svg>\r\n                                    </span>\r\n                                    <p>{shoe.quantity}</p>\r\n                                    <span>\r\n                                        <svg id={index} onClick={addQuantity} xmlns=\"http://www.w3.org/2000/svg\" class=\"icon icon-tabler icon-tabler-plus\" width=\"25\" height=\"44\" viewBox=\"0 0 24 24\" stroke-width=\"1.5\" stroke=\"#fff\" fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\r\n                                        <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\"/>\r\n                                        <line x1=\"12\" y1=\"5\" x2=\"12\" y2=\"19\" />\r\n                                        <line x1=\"5\" y1=\"12\" x2=\"19\" y2=\"12\" />\r\n                                        </svg>\r\n                                    </span>\r\n                                </div>\r\n                                <button className='shoe-container__button' id={index} onClick={addToCart}>Add to cart</button>\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                })}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ShoppingCart;","H:\\Code Files\\shopping-cart\\shopping-cart\\src\\views\\Cart.jsx",["29","30","31"],{"ruleId":"32","replacedBy":"33"},{"ruleId":"34","replacedBy":"35"},{"ruleId":"36","severity":1,"message":"37","line":8,"column":3,"nodeType":"38","messageId":"39","endLine":8,"endColumn":7},{"ruleId":"40","severity":1,"message":"41","line":130,"column":29,"nodeType":"42","endLine":130,"endColumn":83},{"ruleId":"43","severity":1,"message":"44","line":14,"column":5,"nodeType":"38","endLine":14,"endColumn":14,"suggestions":"45"},{"ruleId":"46","severity":1,"message":"47","line":17,"column":29,"nodeType":"48","messageId":"49","endLine":17,"endColumn":31},{"ruleId":"40","severity":1,"message":"41","line":53,"column":33,"nodeType":"42","endLine":53,"endColumn":55},"no-native-reassign",["50"],"no-negated-in-lhs",["51"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'setTotal'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [cart] as a second argument to the useEffect Hook.",["52"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-global-assign","no-unsafe-negation",{"desc":"53","fix":"54"},"Add dependencies array: [cart]",{"range":"55","text":"56"},[610,610],", [cart]"]